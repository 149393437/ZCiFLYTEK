<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/IFlySpeechUnderstander.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/IFlySpeechUnderstander</TokenIdentifier>
			<Abstract type="html">语义理解接口</Abstract>
			<DeclaredIn>IFlySpeechUnderstander.h</DeclaredIn>
            
			
			<NodeRef refid="14"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/IFlySpeechUnderstander/setIsUnderstanding:</TokenIdentifier>
			<Abstract type="html">是否正在语义理解</Abstract>
			<DeclaredIn>IFlySpeechUnderstander.h</DeclaredIn>
			
			<Declaration>@property (readonly) BOOL isUnderstanding</Declaration>
			
			
			<Anchor>//api/name/isUnderstanding</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/IFlySpeechUnderstander/isUnderstanding</TokenIdentifier>
			<Abstract type="html">是否正在语义理解</Abstract>
			<DeclaredIn>IFlySpeechUnderstander.h</DeclaredIn>
			
			<Declaration>@property (readonly) BOOL isUnderstanding</Declaration>
			
			
			<Anchor>//api/name/isUnderstanding</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/IFlySpeechUnderstander/isUnderstanding</TokenIdentifier>
			<Abstract type="html">是否正在语义理解</Abstract>
			<DeclaredIn>IFlySpeechUnderstander.h</DeclaredIn>
			
			<Declaration>@property (readonly) BOOL isUnderstanding</Declaration>
			
			
			<Anchor>//api/name/isUnderstanding</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/IFlySpeechUnderstander/setDelegate:</TokenIdentifier>
			<Abstract type="html">设置委托对象</Abstract>
			<DeclaredIn>IFlySpeechUnderstander.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, retain) id&lt;IFlySpeechRecognizerDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/IFlySpeechUnderstander/delegate</TokenIdentifier>
			<Abstract type="html">设置委托对象</Abstract>
			<DeclaredIn>IFlySpeechUnderstander.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, retain) id&lt;IFlySpeechRecognizerDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/IFlySpeechUnderstander/delegate</TokenIdentifier>
			<Abstract type="html">设置委托对象</Abstract>
			<DeclaredIn>IFlySpeechUnderstander.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, retain) id&lt;IFlySpeechRecognizerDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/IFlySpeechUnderstander/sharedInstance</TokenIdentifier>
			<Abstract type="html">创建语义理解对象的单例</Abstract>
			<DeclaredIn>IFlySpeechUnderstander.h</DeclaredIn>
			
			<Declaration>+ (instancetype)sharedInstance</Declaration>
			
			<ReturnValue><Abstract type="html">语义理解对象</Abstract></ReturnValue>
			<Anchor>//api/name/sharedInstance</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/IFlySpeechUnderstander/startListening</TokenIdentifier>
			<Abstract type="html">开始义理解
同时只能进行一路会话，这次会话没有结束不能进行下一路会话，否则会报错。若有需要多次回话，请在onError回调返回后请求下一路回话。</Abstract>
			<DeclaredIn>IFlySpeechUnderstander.h</DeclaredIn>
			
			<Declaration>- (BOOL)startListening</Declaration>
			
			<ReturnValue><Abstract type="html">成功返回YES，失败返回NO</Abstract></ReturnValue>
			<Anchor>//api/name/startListening</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/IFlySpeechUnderstander/stopListening</TokenIdentifier>
			<Abstract type="html">停止录音
调用此函数会停止录音，并开始进行语义理解</Abstract>
			<DeclaredIn>IFlySpeechUnderstander.h</DeclaredIn>
			
			<Declaration>- (void)stopListening</Declaration>
			
			
			<Anchor>//api/name/stopListening</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/IFlySpeechUnderstander/cancel</TokenIdentifier>
			<Abstract type="html">取消本次会话</Abstract>
			<DeclaredIn>IFlySpeechUnderstander.h</DeclaredIn>
			
			<Declaration>- (void)cancel</Declaration>
			
			
			<Anchor>//api/name/cancel</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/IFlySpeechUnderstander/setParameter:forKey:</TokenIdentifier>
			<Abstract type="html">设置语义理解引擎的参数
语义理解的引擎参数(key)取值如下：
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;&lt;th&gt;*参数&lt;/th&gt;&lt;th&gt;&lt;em&gt;描述&lt;/em&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;domain&lt;/td&gt;&lt;td&gt;应用的领域: 取值为:iat、search、video、poi、music、asr；&lt;br/&gt;iat：普通文本听写；&lt;br/&gt;search：热词搜索；&lt;br/&gt;video：视频音乐搜索；&lt;br/&gt;video：视频音乐搜索；&lt;br/&gt;asr：关键词识别;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;vad_bos&lt;/td&gt;&lt;td&gt;前端点检测: 静音超时时间，即用户多长时间不说话则当做超时处理； 单位：ms；&lt;br/&gt;engine指定iat识别默认值为5000；&lt;br/&gt;其他情况默认值为 4000，范围 0-10000。&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;vad_eos&lt;/td&gt;&lt;td&gt;后断点检测: 后端点静音检测时间,即用户停止说话多长时间内即认为不再输入,&lt;br/&gt;自动停止录音；单位:ms;&lt;br/&gt;sms 识别默认值为 1800;&lt;br/&gt;其他默认值为 700，范围 0-10000。&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;sample_rate&lt;/td&gt;&lt;td&gt;采样率:目前支持的采样率设置有 16000 和 8000。&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;asr_ptt&lt;/td&gt;&lt;td&gt;标点符号设置: 默认为 1，当设置为 0 时，将返回无标点符号文本。&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;result_type&lt;/td&gt;&lt;td&gt;返回结果的数据格式: 可设置为json，xml，plain，默认为json。&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;grammarID&lt;/td&gt;&lt;td&gt;识别的语法id: 只针对 domain 设置为”asr”的应用。&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;asraudiopath&lt;/td&gt;&lt;td&gt;音频文件名: 设置此参数后，将会自动保存识别的录音文件。&lt;br/&gt; 路径为Documents/(指定值)。&lt;br/&gt;不设置或者设置为nil，则不保存音频。&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;params&lt;/td&gt;&lt;td&gt;扩展参数: 对于一些特殊的参数可在此设置，一般用于设置语义。&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</Abstract>
			<DeclaredIn>IFlySpeechUnderstander.h</DeclaredIn>
			
			<Declaration>- (BOOL)setParameter:(NSString *)value forKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>value</Name>
					<Abstract type="html">参数对应的取值</Abstract>
				</Parameter><Parameter>
					<Name>key</Name>
					<Abstract type="html">语义理解引擎参数</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">成功返回YES；失败返回NO</Abstract></ReturnValue>
			<Anchor>//api/name/setParameter:forKey:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/IFlySpeechUnderstander/writeAudio:</TokenIdentifier>
			<Abstract type="html">写入音频流</Abstract>
			<DeclaredIn>IFlySpeechUnderstander.h</DeclaredIn>
			
			<Declaration>- (BOOL)writeAudio:(NSData *)audioData</Declaration>
			<Parameters>
				<Parameter>
					<Name>audioData</Name>
					<Abstract type="html">音频数据</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">写入成功返回YES，写入失败返回NO</Abstract></ReturnValue>
			<Anchor>//api/name/writeAudio:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/IFlySpeechUnderstander/destroy</TokenIdentifier>
			<Abstract type="html">销毁语义理解对象。</Abstract>
			<DeclaredIn>IFlySpeechUnderstander.h</DeclaredIn>
			
			<Declaration>- (BOOL)destroy</Declaration>
			
			<ReturnValue><Abstract type="html">成功返回YES；失败返回NO</Abstract></ReturnValue>
			<Anchor>//api/name/destroy</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
        
        
	</File>
</Tokens>